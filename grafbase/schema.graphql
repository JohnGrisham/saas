extend schema
  @openapi(
    name: "Stripe"
    url: "https://api.stripe.com"
    schema: "https://raw.githubusercontent.com/stripe/openapi/master/openapi/spec3.json"
    headers: [
      { name: "Authorization", value: "Bearer {{ env.STRIPE_SECRET_KEY }}" }
    ]
  )
  @auth(
    providers: [
      {
        type: jwt
        issuer: "{{ env.ISSUER_URL }}"
        secret: "{{ env.NEXTAUTH_SECRET }}"
      }
    ]
    rules: [{ allow: private }]
  ) {
  query: Query
}

enum IdentityType {
  CREDENTIALS
  GITHUB
  GOOGLE
  NETLIFY
}

type CognitoUser {
  sub: ID!
  stripeId: String
  userId: String
  email: Email! @unique
  confirmationStatus: String!
}

type User @model {
  id: ID!
  name: String
  email: Email! @unique
  identities: [Identity!]
  customer: StripeCustomer @resolver(name: "stripe/customer/byEmail")
  cognitoUser: CognitoUser @resolver(name: "cognito/user/byEmail")
  sites: [Site]
}

type Identity @model {
  id: ID!
  sub: String! @unique
  type: IdentityType!
  user: User!
}

type TemplateData @model {
  id: ID!
  data: JSON!
  site: Site!
}

type Site @model {
  id: ID!
  name: String!
  description: String!
  logo: String
  font: String @default(value: "font-cal")
  image: String
  imageBlurhash: String
  subdomain: String! @unique
  customDomain: String! @unique
  user: User!
  templateData: TemplateData
}
