extend schema
  @openapi(
    name: "Stripe"
    url: "https://api.stripe.com"
    schema: "https://raw.githubusercontent.com/stripe/openapi/master/openapi/spec3.json"
  )
  @auth(
    providers: [
      {
        type: jwt
        issuer: "{{ env.ISSUER_URL }}"
        secret: "{{ env.NEXTAUTH_SECRET }}"
      }
    ]
    rules: [{ allow: private }]
  ) {
  query: Query
}

enum IdentityType {
  CREDENTIALS
  GITHUB
  GOOGLE
}

enum SubStatus {
  INCOMPLETE
  INCOMPLETE_EXPIRED
  TRIALING
  ACTIVE
  PAST_DUE
  CANCELED
  UNPAID
}

type User @model {
  id: ID!
  name: String
  email: Email! @unique
  identities: [Identity!]
  customer: JSON @resolver(name: "stripe/customer/byEmail")
}

type Identity @model {
  id: ID!
  sub: String! @unique
  type: IdentityType!
  user: User!
}

type Customer @model {
  id: ID!
  stripeId: String! @unique
  subscriptions: [Subscription!]
  user: User!
}

type Product @model {
  id: ID!
  currency: String!
  interval: String!
  name: String! @unique
  price: String!
  subscription: Subscription!
  features: [Feature!]!
}

type Feature @model {
  id: ID!
  name: String! @unique
  description: String
  product: Product!
}

type Subscription @model {
  id: ID!
  customer: Customer!
  product: Product!
  quantity: Int!
  status: SubStatus!
  startDate: Timestamp!
  endDate: Timestamp
  trialStart: Timestamp
  trialEnd: Timestamp
}
